'use strict'; // code generated by pbf v3.2.0

// Ingredient ========================================

var Ingredient = exports.Ingredient = {};

Ingredient.read = function (pbf, end) {
    return pbf.readFields(Ingredient._readField, {name: ""}, end);
};
Ingredient._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
};
Ingredient.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
};

// Step ========================================

var Step = exports.Step = {};

Step.read = function (pbf, end) {
    return pbf.readFields(Step._readField, {description: ""}, end);
};
Step._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.description = pbf.readString();
};
Step.write = function (obj, pbf) {
    if (obj.description) pbf.writeStringField(1, obj.description);
};

// Recipe ========================================

var Recipe = exports.Recipe = {};

Recipe.read = function (pbf, end) {
    return pbf.readFields(Recipe._readField, {name: "", ingredients: [], preparation: []}, end);
};
Recipe._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.ingredients.push(Ingredient.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.preparation.push(Step.read(pbf, pbf.readVarint() + pbf.pos));
};
Recipe.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.ingredients) for (var i = 0; i < obj.ingredients.length; i++) pbf.writeMessage(2, Ingredient.write, obj.ingredients[i]);
    if (obj.preparation) for (i = 0; i < obj.preparation.length; i++) pbf.writeMessage(3, Step.write, obj.preparation[i]);
};

// Error ========================================

var Error = exports.Error = {};

Error.read = function (pbf, end) {
    return pbf.readFields(Error._readField, {reason: ""}, end);
};
Error._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.reason = pbf.readString();
};
Error.write = function (obj, pbf) {
    if (obj.reason) pbf.writeStringField(1, obj.reason);
};
